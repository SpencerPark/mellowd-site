declare namespace MIDIjs {

    /**
     * if using WebAudioAPI:
     * &nbsp;&nbsp;"audioMethod: WebAudioAPI, sampleRate (Hz): $sampleRate, audioBufferSize (Byte): $audioBufferSize"
     * else if using bgsound:
     * &nbsp;&nbsp;"audioMethod: <bgsound>"
     * else if using object:
     * &nbsp;&nbsp;"audioMethod: <object>"
     * else
     * &nbsp;&nbsp;"audioMethod: No method found"
     */
    export function get_audio_status(): string;

    /**
     * Set this to a new function to receive messages about what is happening
     * with playback.
     *
     * By default this will simply log to console.
     * @param message the message generated by playback such as "Playing $url ..."
     */
    export function message_callback(message: string): void;

    /**
     * Start playing a song
     * @param songUrl the url of the song to play. Can be a data url of the form 'data:audio/midi;base64,$data_in_base64'
     */
    export function play(songUrl: string): void;

    /**
     * Stop the current playback
     */
    export function stop(): void;

    export interface PlaybackEvent {
        time: number;
    }
    /**
     * Set to intercept callback events regarding the player.
     * @param event the event
     */
    export function player_callback(event: PlaybackEvent): void;
}